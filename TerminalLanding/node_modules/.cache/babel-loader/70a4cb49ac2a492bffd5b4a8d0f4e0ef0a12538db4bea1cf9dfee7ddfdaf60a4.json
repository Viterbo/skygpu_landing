{"ast":null,"code":"var _jsxFileName = \"/home/monky/Repos/skygpu_landing/TerminalLanding/src/components/Selector.js\",\n  _s = $RefreshSig$();\n/* /src/component/Selector.js */\nimport React from 'react';\nimport './Selector.css';\nimport TypewriterText from '../fx/TypewriterText';\nimport { useViewerState } from '../states/viewer_state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Selector = () => {\n  _s();\n  const {\n    setViewer\n  } = useViewerState(); // Get the function to update viewer state\n\n  const changeViewer = state => {\n    setViewer(state);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector-title\",\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          children: \"Welcome to Skynet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          children: \"select an option:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option\",\n          onClick: () => changeViewer('intro'),\n          children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n            hover: true,\n            ticking: true,\n            children: \"/Intro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option\",\n          onClick: () => changeViewer('alpha'),\n          children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n            hover: true,\n            ticking: true,\n            children: \"/Alpha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n            hover: true,\n            ticking: true,\n            children: \"/Beta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n};\n_s(Selector, \"ODWf15D4y0DjDCtZG6OQsf2xOb4=\", false, function () {\n  return [useViewerState];\n});\n_c = Selector;\nexport default Selector;\nvar _c;\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"names":["React","TypewriterText","useViewerState","jsxDEV","_jsxDEV","Selector","_s","setViewer","changeViewer","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","hover","ticking","_c","$RefreshReg$"],"sources":["/home/monky/Repos/skygpu_landing/TerminalLanding/src/components/Selector.js"],"sourcesContent":["/* /src/component/Selector.js */\nimport React from 'react';\nimport './Selector.css';\nimport TypewriterText from '../fx/TypewriterText';\nimport { useViewerState } from '../states/viewer_state'; \n\n\nconst Selector = () => {\n    const { setViewer } = useViewerState(); // Get the function to update viewer state\n\n    const changeViewer = (state) => {\n        setViewer(state);\n    };\n\n\n    return (\n\n            <div className=\"selector\">\n            <div className=\"selector-header\">\n                <div className=\"selector-title\">\n                    <TypewriterText>Welcome to Skynet.</TypewriterText>\n                </div>\n                <p><TypewriterText >select an option:</TypewriterText></p>\n            </div>\n            <div className=\"selector-body\">\n                <div className=\"selector-options\">\n                    <button className=\"option\" onClick={() => changeViewer('intro')}>\n                        <TypewriterText hover={true} ticking={true}>/Intro</TypewriterText>\n                    </button>\n                    <button className=\"option\" onClick={() => changeViewer('alpha')}>\n                        <TypewriterText hover={true} ticking={true}>/Alpha</TypewriterText>\n                        </button>\n                    <button className=\"option\" >\n                        <TypewriterText hover={true} ticking={true}>/Beta</TypewriterText>\n                        </button>\n                </div>\n            </div>  \n            </div>\n    );\n    \n\n\n};\n\nexport default Selector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}