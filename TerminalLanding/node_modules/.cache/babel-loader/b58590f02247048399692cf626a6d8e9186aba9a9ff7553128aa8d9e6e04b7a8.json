{"ast":null,"code":"var _jsxFileName = \"/home/monky/Repos/skygpu_landing/TerminalLanding/src/components/Viewer.js\",\n  _s = $RefreshSig$();\n// /src/component/Viewer.js\nimport React from 'react';\nimport './Viewer.css';\nimport TypewriterText from '../fx/TypewriterText';\nimport Intro from './view_content/introView';\nimport { useViewerState } from '../states/viewer_state'; // Import the custom hook to access viewer state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Viewer = () => {\n  _s();\n  const {\n    viewerState\n  } = useViewerState(); // Get the viewer state using the custom hook\n\n  // Render content based on viewer state\n  let content;\n  switch (viewerState) {\n    case 'none':\n      content = /*#__PURE__*/_jsxDEV(TypewriterText, {\n        children: \"...waiting for selection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'intro':\n      content = /*#__PURE__*/_jsxDEV(IntroView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'alpha':\n      content = /*#__PURE__*/_jsxDEV(AlphaView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'beta':\n      content = /*#__PURE__*/_jsxDEV(BetaView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 23\n      }, this);\n      break;\n    default:\n      content = /*#__PURE__*/_jsxDEV(TypewriterText, {\n        children: \"...waiting for selection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewer\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Viewer, \"TczYKLD+on+cLt0mH7PthEGsBjk=\", false, function () {\n  return [useViewerState];\n});\n_c = Viewer;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","TypewriterText","Intro","useViewerState","jsxDEV","_jsxDEV","Viewer","_s","viewerState","content","children","fileName","_jsxFileName","lineNumber","columnNumber","IntroView","AlphaView","BetaView","className","_c","$RefreshReg$"],"sources":["/home/monky/Repos/skygpu_landing/TerminalLanding/src/components/Viewer.js"],"sourcesContent":["// /src/component/Viewer.js\nimport React from 'react';\nimport './Viewer.css';\nimport TypewriterText from '../fx/TypewriterText';\nimport Intro from './view_content/introView';\nimport { useViewerState } from '../states/viewer_state'; // Import the custom hook to access viewer state\n\nconst Viewer = () => {\n    const { viewerState } = useViewerState(); // Get the viewer state using the custom hook\n\n    // Render content based on viewer state\n    let content;\n    switch (viewerState) {\n        case 'none':\n            content = <TypewriterText>...waiting for selection.</TypewriterText>;\n            break;\n        case 'intro':\n            content = <IntroView/>;\n            break;\n        case 'alpha':\n            content = <AlphaView/>;\n            break;\n        case 'beta':\n            content = <BetaView/>;\n            break;\n        default:\n            content = <TypewriterText>...waiting for selection.</TypewriterText>;\n    }\n\n    return (\n        <div className=\"viewer\">\n            {content}\n        </div>\n    );\n};\n\nexport default Viewer;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SAASC,cAAc,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAY,CAAC,GAAGL,cAAc,CAAC,CAAC,CAAC,CAAC;;EAE1C;EACA,IAAIM,OAAO;EACX,QAAQD,WAAW;IACf,KAAK,MAAM;MACPC,OAAO,gBAAGJ,OAAA,CAACJ,cAAc;QAAAS,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;MACpE;IACJ,KAAK,OAAO;MACRL,OAAO,gBAAGJ,OAAA,CAACU,SAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MACtB;IACJ,KAAK,OAAO;MACRL,OAAO,gBAAGJ,OAAA,CAACW,SAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MACtB;IACJ,KAAK,MAAM;MACPL,OAAO,gBAAGJ,OAAA,CAACY,QAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MACrB;IACJ;MACIL,OAAO,gBAAGJ,OAAA,CAACJ,cAAc;QAAAS,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;EAC5E;EAEA,oBACIT,OAAA;IAAKa,SAAS,EAAC,QAAQ;IAAAR,QAAA,EAClBD;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACP,EAAA,CA3BID,MAAM;EAAA,QACgBH,cAAc;AAAA;AAAAgB,EAAA,GADpCb,MAAM;AA6BZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}