{"ast":null,"code":"var _jsxFileName = \"/home/monky/Repos/skygpu_landing/TerminalLanding/src/TypewriterText.js\",\n  _s = $RefreshSig$();\n// src/TypewriterText.js\nimport React, { useState, useEffect } from 'react';\nimport './TypewriterText.css'; // Import the CSS file for hover styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypewriterText = ({\n  children,\n  speed = 100,\n  hover = false\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  const text = React.Children.toArray(children).join(''); // Convert children to text\n\n  useEffect(() => {\n    setDisplayedText(''); // Reset the displayed text before starting the typing effect\n\n    let index = 0;\n    const intervalId = setInterval(() => {\n      setDisplayedText(prev => prev + text[index]);\n      index++;\n      if (index === text.length) {\n        clearInterval(intervalId);\n      }\n    }, speed);\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: hover ? 'typewriter hover' : 'typewriter',\n    children: displayedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TypewriterText, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\n_c = TypewriterText;\nexport default TypewriterText;\nvar _c;\n$RefreshReg$(_c, \"TypewriterText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypewriterText","children","speed","hover","_s","displayedText","setDisplayedText","text","Children","toArray","join","index","intervalId","setInterval","prev","length","clearInterval","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/monky/Repos/skygpu_landing/TerminalLanding/src/TypewriterText.js"],"sourcesContent":["// src/TypewriterText.js\nimport React, { useState, useEffect } from 'react';\nimport './TypewriterText.css'; // Import the CSS file for hover styles\n\nconst TypewriterText = ({ children, speed = 100, hover = false }) => {\n  const [displayedText, setDisplayedText] = useState('');\n  const text = React.Children.toArray(children).join(''); // Convert children to text\n\n  useEffect(() => {\n    setDisplayedText(''); // Reset the displayed text before starting the typing effect\n\n    let index = 0;\n    const intervalId = setInterval(() => {\n      setDisplayedText((prev) => prev + text[index]);\n      index++;\n      if (index === text.length) {\n        clearInterval(intervalId);\n      }\n    }, speed);\n\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n\n  return (\n    <span className={hover ? 'typewriter hover' : 'typewriter'}>\n      {displayedText}\n    </span>\n  );\n};\n\nexport default TypewriterText;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK,GAAG,GAAG;EAAEC,KAAK,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMW,IAAI,GAAGZ,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACR,QAAQ,CAAC,CAACS,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExDb,SAAS,CAAC,MAAM;IACdS,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEtB,IAAIK,KAAK,GAAG,CAAC;IACb,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCP,gBAAgB,CAAEQ,IAAI,IAAKA,IAAI,GAAGP,IAAI,CAACI,KAAK,CAAC,CAAC;MAC9CA,KAAK,EAAE;MACP,IAAIA,KAAK,KAAKJ,IAAI,CAACQ,MAAM,EAAE;QACzBC,aAAa,CAACJ,UAAU,CAAC;MAC3B;IACF,CAAC,EAAEV,KAAK,CAAC;IAET,OAAO,MAAMc,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC,EAAE,CAACL,IAAI,EAAEL,KAAK,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAMkB,SAAS,EAAEd,KAAK,GAAG,kBAAkB,GAAG,YAAa;IAAAF,QAAA,EACxDI;EAAa;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACjB,EAAA,CAxBIJ,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}