{"ast":null,"code":"var _jsxFileName = \"/home/monky/Repos/skygpu_landing/TerminalLanding/src/TypewriterText.js\",\n  _s = $RefreshSig$();\n// src/TypewriterText.js\nimport React, { useState, useEffect } from 'react';\nimport './TypewriterText.css'; // Import the CSS file for hover styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypewriterText = ({\n  children,\n  speed = 500,\n  hover = false,\n  elementType = 'span'\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    const text = children;\n    setDisplayedText(''); // Reset the displayed text before starting the typing effect\n\n    let index = 0;\n    const intervalId = setInterval(() => {\n      setDisplayedText(prev => prev + text[index]);\n      index++;\n      if (index === text.length) {\n        clearInterval(intervalId);\n      }\n    }, speed);\n    return () => clearInterval(intervalId);\n  }, [children, speed]);\n  const Element = elementType;\n  return /*#__PURE__*/_jsxDEV(Element, {\n    className: hover ? 'typewriter hover' : 'typewriter',\n    children: displayedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TypewriterText, \"PLbRMeWiJa2NBtcoy3qeXvmWyJg=\");\n_c = TypewriterText;\nexport default TypewriterText;\nvar _c;\n$RefreshReg$(_c, \"TypewriterText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypewriterText","children","speed","hover","elementType","_s","displayedText","setDisplayedText","text","index","intervalId","setInterval","prev","length","clearInterval","Element","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/monky/Repos/skygpu_landing/TerminalLanding/src/TypewriterText.js"],"sourcesContent":["// src/TypewriterText.js\nimport React, { useState, useEffect } from 'react';\nimport './TypewriterText.css'; // Import the CSS file for hover styles\n\nconst TypewriterText = ({ children, speed = 500, hover = false, elementType = 'span' }) => {\n  const [displayedText, setDisplayedText] = useState('');\n\n  useEffect(() => {\n    const text = children;\n    setDisplayedText(''); // Reset the displayed text before starting the typing effect\n\n    let index = 0;\n    const intervalId = setInterval(() => {\n      setDisplayedText((prev) => prev + text[index]);\n      index++;\n      if (index === text.length) {\n        clearInterval(intervalId);\n      }\n    }, speed);\n\n    return () => clearInterval(intervalId);\n  }, [children, speed]);\n\n  const Element = elementType;\n\n  return (\n    <Element className={hover ? 'typewriter hover' : 'typewriter'}>\n      {displayedText}\n    </Element>\n  );\n};\n\nexport default TypewriterText;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK,GAAG,GAAG;EAAEC,KAAK,GAAG,KAAK;EAAEC,WAAW,GAAG;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAGP,QAAQ;IACrBM,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEtB,IAAIE,KAAK,GAAG,CAAC;IACb,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCJ,gBAAgB,CAAEK,IAAI,IAAKA,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAAC,CAAC;MAC9CA,KAAK,EAAE;MACP,IAAIA,KAAK,KAAKD,IAAI,CAACK,MAAM,EAAE;QACzBC,aAAa,CAACJ,UAAU,CAAC;MAC3B;IACF,CAAC,EAAER,KAAK,CAAC;IAET,OAAO,MAAMY,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC,EAAE,CAACT,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAErB,MAAMa,OAAO,GAAGX,WAAW;EAE3B,oBACEL,OAAA,CAACgB,OAAO;IAACC,SAAS,EAAEb,KAAK,GAAG,kBAAkB,GAAG,YAAa;IAAAF,QAAA,EAC3DK;EAAa;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACf,EAAA,CA1BIL,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}