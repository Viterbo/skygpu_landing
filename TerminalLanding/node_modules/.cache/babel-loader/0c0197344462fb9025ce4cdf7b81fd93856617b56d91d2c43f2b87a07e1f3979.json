{"ast":null,"code":"var _jsxFileName = \"/home/monky/Repos/skygpu_landing/TerminalLanding/src/TypewriterText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TypewriterText.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypewriterText = ({\n  children,\n  speed = 50,\n  hover = false,\n  textSize = '1em'\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    let index = 0;\n    if (isVisible) {\n      const text = children;\n      setDisplayedText(''); // Reset the displayed text before starting the typing effect\n\n      const intervalId = setInterval(() => {\n        setDisplayedText(prev => prev + text[index]);\n        index++;\n        if (index === text.length) {\n          clearInterval(intervalId);\n        }\n      }, speed);\n      return () => clearInterval(intervalId);\n    }\n  }, [children, speed, isVisible]);\n  useEffect(() => {\n    // Trigger the rendering of the next TypewriterText component when the current one finishes\n    if (displayedText === children) {\n      setIsVisible(true);\n    }\n  }, [displayedText, children]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: hover ? 'typewriter hover' : 'typewriter',\n    style: {\n      fontSize: textSize\n    },\n    children: displayedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TypewriterText, \"Q6DacXFtt7VaWXgrOuqseC/jb4I=\");\n_c = TypewriterText;\nexport default TypewriterText;\nvar _c;\n$RefreshReg$(_c, \"TypewriterText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypewriterText","children","speed","hover","textSize","_s","displayedText","setDisplayedText","isVisible","setIsVisible","index","text","intervalId","setInterval","prev","length","clearInterval","className","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/monky/Repos/skygpu_landing/TerminalLanding/src/TypewriterText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './TypewriterText.css';\n\nconst TypewriterText = ({ children, speed = 50, hover = false, textSize = '1em' }) => {\n  const [displayedText, setDisplayedText] = useState('');\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    let index = 0;\n    if (isVisible) {\n      const text = children;\n      setDisplayedText(''); // Reset the displayed text before starting the typing effect\n\n      const intervalId = setInterval(() => {\n        setDisplayedText((prev) => prev + text[index]);\n        index++;\n        if (index === text.length) {\n          clearInterval(intervalId);\n        }\n      }, speed);\n\n      return () => clearInterval(intervalId);\n    }\n  }, [children, speed, isVisible]);\n\n  useEffect(() => {\n    // Trigger the rendering of the next TypewriterText component when the current one finishes\n    if (displayedText === children) {\n      setIsVisible(true);\n    }\n  }, [displayedText, children]);\n\n  return (\n    <span\n      className={hover ? 'typewriter hover' : 'typewriter'}\n      style={{ fontSize: textSize }}\n    >\n      {displayedText}\n    </span>\n  );\n};\n\nexport default TypewriterText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK,GAAG,EAAE;EAAEC,KAAK,GAAG,KAAK;EAAEC,QAAQ,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIa,KAAK,GAAG,CAAC;IACb,IAAIF,SAAS,EAAE;MACb,MAAMG,IAAI,GAAGV,QAAQ;MACrBM,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEtB,MAAMK,UAAU,GAAGC,WAAW,CAAC,MAAM;QACnCN,gBAAgB,CAAEO,IAAI,IAAKA,IAAI,GAAGH,IAAI,CAACD,KAAK,CAAC,CAAC;QAC9CA,KAAK,EAAE;QACP,IAAIA,KAAK,KAAKC,IAAI,CAACI,MAAM,EAAE;UACzBC,aAAa,CAACJ,UAAU,CAAC;QAC3B;MACF,CAAC,EAAEV,KAAK,CAAC;MAET,OAAO,MAAMc,aAAa,CAACJ,UAAU,CAAC;IACxC;EACF,CAAC,EAAE,CAACX,QAAQ,EAAEC,KAAK,EAAEM,SAAS,CAAC,CAAC;EAEhCX,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,aAAa,KAAKL,QAAQ,EAAE;MAC9BQ,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,aAAa,EAAEL,QAAQ,CAAC,CAAC;EAE7B,oBACEF,OAAA;IACEkB,SAAS,EAAEd,KAAK,GAAG,kBAAkB,GAAG,YAAa;IACrDe,KAAK,EAAE;MAAEC,QAAQ,EAAEf;IAAS,CAAE;IAAAH,QAAA,EAE7BK;EAAa;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAAClB,EAAA,CArCIL,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}