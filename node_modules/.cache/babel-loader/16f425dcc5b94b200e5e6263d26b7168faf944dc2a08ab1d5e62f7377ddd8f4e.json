{"ast":null,"code":"// /src/component/Viewer.js\nimport React from'react';import'./Viewer.css';import TypewriterText from'../fx/TypewriterText';import{useViewerState}from'../states/viewer_state';// Import the custom hook to access viewer state\nimport IntroView from'./view_content/introView';import AlphaView from'./view_content/alphaView';import BetaView from'./view_content/betaView';import Prompt from'./view_content/prompt';import MuseumView from'./view_content/museumView';import{jsx as _jsx}from\"react/jsx-runtime\";const Viewer=()=>{const{viewerState}=useViewerState();// Get the viewer state using the custom hook\n// Render content based on viewer state\nlet content;switch(viewerState){case'none':content=/*#__PURE__*/_jsx(TypewriterText,{children:\"...waiting for selection.\"});break;case'intro':content=/*#__PURE__*/_jsx(IntroView,{});break;case'alpha':content=/*#__PURE__*/_jsx(AlphaView,{});break;case'beta':content=/*#__PURE__*/_jsx(BetaView,{});break;case'museum':content=/*#__PURE__*/_jsx(MuseumView,{});break;default:content=/*#__PURE__*/_jsx(TypewriterText,{children:\"...waiting for selection.\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"viewer\",children:content});};export default Viewer;","map":{"version":3,"names":["React","TypewriterText","useViewerState","IntroView","AlphaView","BetaView","Prompt","MuseumView","jsx","_jsx","Viewer","viewerState","content","children","className"],"sources":["/home/monky/Repos/skygpu_landing/src/components/Viewer.js"],"sourcesContent":["// /src/component/Viewer.js\nimport React from 'react';\nimport './Viewer.css';\nimport TypewriterText from '../fx/TypewriterText';\nimport { useViewerState } from '../states/viewer_state'; // Import the custom hook to access viewer state\nimport IntroView from './view_content/introView';\nimport AlphaView from './view_content/alphaView';\nimport BetaView from './view_content/betaView';\nimport Prompt from './view_content/prompt';\nimport MuseumView from './view_content/museumView';\n\nconst Viewer = () => {\n    const { viewerState } = useViewerState(); // Get the viewer state using the custom hook\n\n    // Render content based on viewer state\n    let content;\n    switch (viewerState) {\n        case 'none':\n            content = <TypewriterText>...waiting for selection.</TypewriterText>;\n            break;\n        case 'intro':\n            content = <IntroView/>;\n            break;\n        case 'alpha':\n            content = <AlphaView/>;\n            break;\n        case 'beta':\n            content = <BetaView/>;\n            break;\n        case 'museum':\n            content = <MuseumView/>;\n            break;\n        default:\n            content = <TypewriterText>...waiting for selection.</TypewriterText>;\n    }\n\n    return (\n        <div className=\"viewer\">\n            {content}\n        </div>\n    );\n};\n\nexport default Viewer;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,cAAc,CACrB,MAAO,CAAAC,cAAc,KAAM,sBAAsB,CACjD,OAASC,cAAc,KAAQ,wBAAwB,CAAE;AACzD,MAAO,CAAAC,SAAS,KAAM,0BAA0B,CAChD,MAAO,CAAAC,SAAS,KAAM,0BAA0B,CAChD,MAAO,CAAAC,QAAQ,KAAM,yBAAyB,CAC9C,MAAO,CAAAC,MAAM,KAAM,uBAAuB,CAC1C,MAAO,CAAAC,UAAU,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACjB,KAAM,CAAEC,WAAY,CAAC,CAAGT,cAAc,CAAC,CAAC,CAAE;AAE1C;AACA,GAAI,CAAAU,OAAO,CACX,OAAQD,WAAW,EACf,IAAK,MAAM,CACPC,OAAO,cAAGH,IAAA,CAACR,cAAc,EAAAY,QAAA,CAAC,2BAAyB,CAAgB,CAAC,CACpE,MACJ,IAAK,OAAO,CACRD,OAAO,cAAGH,IAAA,CAACN,SAAS,GAAC,CAAC,CACtB,MACJ,IAAK,OAAO,CACRS,OAAO,cAAGH,IAAA,CAACL,SAAS,GAAC,CAAC,CACtB,MACJ,IAAK,MAAM,CACPQ,OAAO,cAAGH,IAAA,CAACJ,QAAQ,GAAC,CAAC,CACrB,MACJ,IAAK,QAAQ,CACTO,OAAO,cAAGH,IAAA,CAACF,UAAU,GAAC,CAAC,CACvB,MACJ,QACIK,OAAO,cAAGH,IAAA,CAACR,cAAc,EAAAY,QAAA,CAAC,2BAAyB,CAAgB,CAAC,CAC5E,CAEA,mBACIJ,IAAA,QAAKK,SAAS,CAAC,QAAQ,CAAAD,QAAA,CAClBD,OAAO,CACP,CAAC,CAEd,CAAC,CAED,cAAe,CAAAF,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}