{"ast":null,"code":"var _jsxFileName = \"/home/monky/Repos/skygpu_landing/TerminalLanding/src/components/main_content/beta.js\";\n/* /src/component/main.js */\nimport React from 'react';\nimport './main_content.css';\nimport TypewriterText from '../../fx/TypewriterText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Beta = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          speed: 10,\n          textSize: \"20pt\",\n          children: \"Taking Skynet to BETA.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          speed: 10,\n          children: \"Open Moderation Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          speed: 10,\n          children: \"One thing we absolutely need before launching is an automatic moderation system, without this the potential for user abuse is too great. We want to allow users to create NSFW prompts, but never illegal content, and also in the case of legal NSFW content, we want to automatically tag it such that it can be shown accordingly on the multiple frontends.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          speed: 10,\n          children: \"Right now users can only communicate with Skynet through public channels where human moderators are present. In order for Skynet to scale and also to provide users with private channels of communication, we need to include an automatic moderation step in the smart contract logic itself\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          speed: 10,\n          children: \"The logic of the smart contract will not allow for any request to be enqueued that does not contain as an initial step running a moderation model and getting a correct result.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          speed: 10,\n          children: \"In order to fill this need for a model we looked around and what we found did not impress us, in fact it looks like a nice opportunity to create a FOSS moderation model and release it for all to use under the Skynet organization.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TypewriterText, {\n          speed: 10,\n          children: \"We have made several tests which indicate we have already generated about 30% of the dataset we need for this model.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Beta;\nexport default Beta;\nvar _c;\n$RefreshReg$(_c, \"Beta\");","map":{"version":3,"names":["React","TypewriterText","jsxDEV","_jsxDEV","Beta","className","children","speed","textSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/monky/Repos/skygpu_landing/TerminalLanding/src/components/main_content/beta.js"],"sourcesContent":["/* /src/component/main.js */\nimport React from 'react';\nimport './main_content.css';\nimport TypewriterText from '../../fx/TypewriterText';\n\nconst Beta = () => {\n\n    return (\n        <div className=\"page\">\n\n            <div className=\"page-section\">\n                <h1><TypewriterText speed={10} textSize='20pt'>Taking Skynet to BETA.</TypewriterText></h1>\n            </div> \n\n            <div className=\"page-section\">\n                <h1><TypewriterText speed={10}>Open Moderation Model</TypewriterText></h1>\n                <p><TypewriterText speed={10}>One thing we absolutely need before launching is an automatic moderation\nsystem, without this the potential for user abuse is too great. We want to allow\nusers to create NSFW prompts, but never illegal content, and also in the case of\nlegal NSFW content, we want to automatically tag it such that it can be shown\naccordingly on the multiple frontends.</TypewriterText></p>\n                <p><TypewriterText speed={10}>Right now users can only communicate with Skynet through public channels where human moderators are present. In order for Skynet to scale and also to provide users with private channels of communication, we need to include an automatic moderation step in the smart contract logic itself</TypewriterText></p>\n                <p><TypewriterText speed={10}>The logic of the smart contract will not allow for any request to be enqueued that does not contain as an initial step running a moderation model and getting a correct result.</TypewriterText></p>\n                <p><TypewriterText speed={10}>In order to fill this need for a model we looked around and what we found did not impress us, in fact it looks like a nice opportunity to create a FOSS moderation model and release it for all to use under the Skynet organization.</TypewriterText></p>\n                <p><TypewriterText speed={10}>We have made several tests which indicate we have already generated about 30% of the dataset we need for this model.</TypewriterText></p>\n            </div> \n\n        </div>\n    )\n    \n\n};\n\nexport default Beta;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}