{"ast":null,"code":"var _jsxFileName = \"/home/monky/Repos/skygpu_landing/TerminalLanding/src/states/viewer_state.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/states/viewer_state.js\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create a context for the viewer state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewerStateContext = /*#__PURE__*/createContext();\n\n// Custom hook to access the viewer state\nexport const useViewerState = () => {\n  _s();\n  const context = useContext(ViewerStateContext);\n  if (!context) {\n    throw new Error('useViewerState must be used within a ViewerStateProvider');\n  }\n  return context;\n};\n\n// Provider component for the viewer state\n_s(useViewerState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ViewerStateProvider = ({\n  children\n}) => {\n  _s2();\n  // Define the state for viewer\n  const [viewerState, setViewerState] = useState('none'); // Initial state is 'none'\n\n  // Function to update the viewer state\n  const setViewer = state => {\n    setViewerState(state);\n  };\n  return /*#__PURE__*/_jsxDEV(ViewerStateContext.Provider, {\n    value: {\n      viewerState,\n      setViewer\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s2(ViewerStateProvider, \"aeGOt4QdB5UAZdxdrgAOm2hageg=\");\n_c = ViewerStateProvider;\nvar _c;\n$RefreshReg$(_c, \"ViewerStateProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ViewerStateContext","useViewerState","_s","context","Error","ViewerStateProvider","children","_s2","viewerState","setViewerState","setViewer","state","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/monky/Repos/skygpu_landing/TerminalLanding/src/states/viewer_state.js"],"sourcesContent":["// src/states/viewer_state.js\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create a context for the viewer state\nconst ViewerStateContext = createContext();\n\n// Custom hook to access the viewer state\nexport const useViewerState = () => {\n  const context = useContext(ViewerStateContext);\n  if (!context) {\n    throw new Error('useViewerState must be used within a ViewerStateProvider');\n  }\n  return context;\n};\n\n// Provider component for the viewer state\nexport const ViewerStateProvider = ({ children }) => {\n  // Define the state for viewer\n  const [viewerState, setViewerState] = useState('none'); // Initial state is 'none'\n\n  // Function to update the viewer state\n  const setViewer = (state) => {\n    setViewerState(state);\n  };\n\n  return (\n    <ViewerStateContext.Provider value={{ viewerState, setViewer }}>\n      {children}\n    </ViewerStateContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGP,UAAU,CAACI,kBAAkB,CAAC;EAC9C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,cAAc;AAS3B,OAAO,MAAMI,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACnD;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMa,SAAS,GAAIC,KAAK,IAAK;IAC3BF,cAAc,CAACE,KAAK,CAAC;EACvB,CAAC;EAED,oBACEZ,OAAA,CAACC,kBAAkB,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEL,WAAW;MAAEE;IAAU,CAAE;IAAAJ,QAAA,EAC5DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAACV,GAAA,CAdWF,mBAAmB;AAAAa,EAAA,GAAnBb,mBAAmB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}